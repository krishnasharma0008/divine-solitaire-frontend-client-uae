name: Staging Deployment

on:
  push:
    branches:
      - "master"

jobs:
  deploy:
    runs-on: ubuntu-latest
    #needs: test # this job depends on "test" having finished
    #if: github.ref â€˜refs/heads/master' # we tell Github to only execute this step if we're on our master branch (so we don't put unfinished branches in production)

    strategy:
      fail-fast: false # tells github to not run further steps if this one fails
      matrix:
        node-version: [16.x] # sets the version of node we want to use, should be what you have on your server
    steps:
      - name: Deploying to Divine Server
        uses: appleboy/ssh-action@master # An action made to control Linux servers
        with: # We set all our secrets here for the action, these won't be shown in the action logs
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}

          script: |
            cd ${{ secrets.WORK_DIR }} # we move into our app's folder
            # Stopping process running on port
            kill-port 3001
            rm -rf ./node_modules
            rm -rf .next
            git reset --hard # Remove all changes
            git pull # we pull any changes from git
            export NVM _DIR=~/.nvm #get the nvm envirorment to run npm commands
            # source ~/.nvm/nvm.sh
            pnpm install # we install any missing dependencies
            pnpm build # we build our app
            pnpm deploy:staging # Start the app again
            echo "service is running now"
